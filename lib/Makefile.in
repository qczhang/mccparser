############################ -*- Mode: Makefile -*- ###########################
## Makefile.in
## Copyright © 2000-01 Laboratoire de Biologie Informatique et Théorique.
## Author           : Martin Larose
## Created On       : Mon Aug 21 16:06:06 2000
## Last Modified By : Martin Larose
## Last Modified On : Tue Sep 25 15:57:58 2001
## Update Count     : 5
## Status           : Ok.
###############################################################################


PACKAGE = @PACKAGE@
VERSION = @VERSION@

srcdir = @srcdir@
VPATH = @srcdir@

prefix = @prefix@
exec_prefix = @exec_prefix@
datadir = @datadir@
includedir = @includedir@
libdir = @libdir@

CXX = @CXX@
CXXFLAGS = @CXXFLAGS@
CXXSHFLAGS = @CXXSHFLAGS@
DEPFLAGS = @DEPFLAGS@
DEFS = @DEFS@
LD = @CXX@
LIBS = @LIBS@

AR = @AR@
LEX = @LEX@
YACC = @YACC@

INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@ -p
INSTALL_PROGRAM = @INSTALL_PROGRAM@


.SUFFIXES:
.SUFFIXES: .cc .o .lo .d

.cc.d:
	@ $(SHELL) -ec '$(CXX) $(DEPFLAGS) $(CXXFLAGS) $(DEFS) \
              -I$(srcdir) $< \
	    | sed '\''s/\($*\)\.o[ :]*/\1.o \1.lo $@ : /g'\'' > $@; \
	      [ -s $@ ] || rm -f $@'

.cc.o:
	$(CXX) $(CXXFLAGS) -I$(srcdir) $(DEFS) -c $<

.cc.lo:
	$(CXX) $(CXXSHFLAGS) -I$(srcdir) $(DEFS) -c $< -o $@

LEXERPREFIX = mcc

SOURCES = mccparser.cc

CSOURCES = lex.$(LEXERPREFIX).c y.tab.c

HEADERS = $(SOURCES:.cc=.h)

OBJECTS = $(CSOURCES:.c=.o) $(SOURCES:.cc=.o)

SHOBJECTS = $(CSOURCES:.c=.lo) $(SOURCES:.cc=.lo)

LIBRARY = lib$(PACKAGE)

DISTFILES = Makefile.in $(SOURCES) $(HEADERS) mccp.yy mccp.y


all: $(LIBRARY).so.$(VERSION) TAGS

all-static static: $(LIBRARY).a TAGS

$(LIBRARY).so.$(VERSION): $(SHOBJECTS)
	$(CXX) -shared $(LDFLAGS) -o $@ -Wl,-soname,$@ $^

$(LIBRARY).a: $(OBJECTS)
	$(AR) crs $@ $^

TAGS: $(SOURCES) $(HEADERS)
	@ etags --c++ $^

lex.$(LEXERPREFIX).c: mccp.yy
	$(LEX) -P$(LEXERPREFIX) $<

y.tab.c y.tab.h: mccp.y
	$(YACC) -p $(LEXERPREFIX) -d $^

lex.$(LEXERPREFIX).o: lex.$(LEXERPREFIX).c y.tab.h
	$(CXX) $(CXXFLAGS) -I. -I$(srcdir) $(DEFS) -c $<

lex.$(LEXERPREFIX).lo: lex.$(LEXERPREFIX).c y.tab.h
	$(CXX) $(CXXSHFLAGS) -I. -I$(srcdir) $(DEFS) -c $< -o $@

y.tab.o: y.tab.c y.tab.h
	$(CXX) $(CXXFLAGS) -I. -I$(srcdir) $(DEFS) -c $<

y.tab.lo: y.tab.c y.tab.h
	$(CXX) $(CXXSHFLAGS) -I. -I$(srcdir) $(DEFS) -c $< -o $@


doc:


install: $(LIBRARY).so.$(VERSION)
	@ echo Installing $(LIBRARY).so in $(libdir)
	@ $(srcdir)/../mkinstalldirs $(libdir)
	@ $(srcdir)/../mkinstalldirs $(includedir)/$(PACKAGE)-$(VERSION)
	@ $(INSTALL_DATA) $^ $(libdir)/$^
	@ rm -f $(libdir)/$(LIBRARY).so
	@ ln -s $^ $(libdir)/$(LIBRARY).so
	@ for file in $(HEADERS); do \
	   echo Installing $$file in $(includedir)/$(PACKAGE)-$(VERSION); \
           $(INSTALL_DATA) $(srcdir)/$$file $(includedir)/$(PACKAGE)-$(VERSION)/$$file; \
          done;
	@ rm -f $(includedir)/$(PACKAGE)
	@ ln -s $(PACKAGE)-$(VERSION) $(includedir)/$(PACKAGE)

install-static: static
	@ echo Installing $(LIBRARY).a in $(libdir)
	@ $(srcdir)/../mkinstalldirs $(libdir)
	@ $(srcdir)/../mkinstalldirs $(includedir)/$(PACKAGE)-$(VERSION)
	@ $(INSTALL_DATA) $(LIBRARY).a $(libdir)/$(LIBRARY)-$(VERSION).a
	@ rm -f $(libdir)/$(LIBRARY).a
	@ ln -s $(LIBRARY)-$(VERSION).a $(libdir)/$(LIBRARY).a
	@ echo Installing headers in $(includedir)/$(PACKAGE)-$(VERSION)
	@ for file in $(HEADERS); do \
           $(INSTALL_DATA) $(srcdir)/$$file $(includedir)/$(PACKAGE)-$(VERSION)/$$file; \
          done;
	@ rm -f $(includedir)/$(PACKAGE)
	@ ln -s $(PACKAGE)-$(VERSION) $(includedir)/$(PACKAGE)

uninstall:
	@ rm -f $(libdir)/$(LIBRARY).a
	@ rm -f $(libdir)/$(LIBRARY)-$(VERSION).a
	@ rm -f $(libdir)/$(LIBRARY).so
	@ rm -f $(libdir)/$(LIBRARY).so.$(VERSION)
	@ for file in $(HEADERS); do \
           rm -f $(includedir)/$(PACKAGE)-$(VERSION)/$$file; \
          done;
	@- rmdir $(includedir)/$(PACKAGE)-$(VERSION)
	@ rm -f $(includedir)/$(PACKAGE)


mostlyclean:
	@ rm -f *~
	@ rm -f core

clean: mostlyclean
	@ echo "Cleaning project"
	@ rm -f $(LIBRARY).so $(LIBRARY).so.$(VERSION) $(LIBRARY).a
	@ rm -f $(OBJECTS) $(SHOBJECTS) TAGS
	@ rm -f lex.$(LEXERPREFIX).c y.tab.c y.tab.h
	@ rm -f *.d

distclean: clean
	@ rm -f Makefile

topclean: distclean
	@ echo "The project is getting _top_ clean\!"

release: static

dist:
	@ echo "Copying distribution files"
	@ for file in $(DISTFILES); do \
	   ln $(srcdir)/$$file ../$(PACKAGE)-$(VERSION)/lib 2> /dev/null \
	    || cp -p $(srcdir)/$$file ../$(PACKAGE)$(VERSION)/lib; \
	  done

Makefile: $(srcdir)/Makefile.in ../config.status
	@ cd .. && CONFIG_FILES=lib/$@ CONFIG_HEADERS= ./config.status

# Tell versions [3.59,3.63) of GNU make not to export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:

-include $(SOURCES:.cc=.d)
