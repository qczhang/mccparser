#                            -*- Mode: Makefile -*-
# Makefile.in
# Copyright © 2000-03 Laboratoire de Biologie Informatique et Théorique.
# Author           : Martin Larose
# Created On       : Mon Aug 21 16:06:06 2000
# $Revision$$
# $Id$


PACKAGE = @PACKAGE@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
VERSION = @VERSION@

srcdir = @srcdir@
VPATH = @srcdir@

prefix = @prefix@
exec_prefix = @exec_prefix@
datadir = @datadir@
includedir = @includedir@
libdir = @libdir@

CXX = @CXX@
CXXFLAGS = @CXXFLAGS@
DEPFLAGS = @DEPFLAGS@
DEFS = @DEFS@
LD = @CXX@
LINKOPTIONS = @LINKOPTIONS@
LIBEXT = @LIBEXT@
LDFLAGS = @LDFLAGS@
LDNAMEPARAM = @LDNAMEPARAM@
LIBS = @LIBS@
LIBALLFLAGSTART = @LIBALLFLAGSTART@
LIBALLFLAGSTOP = @LIBALLFLAGSTOP@

AR = @AR@
ARXX = @ARXX@
AROPTIONS = @AROPTIONS@
LEX = @LEX@
YACC = @YACC@

INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@

SHARED = @SHARED@
STATIC = @STATIC@

buildcmd = $(CXX) $(CXXFLAGS) $(DEFS) -I.. -I$(srcdir) -c
buildtoken = .built-token

.SUFFIXES:

%.d: %.cc
	@ $(SHELL) -ec '$(CXX) $(DEPFLAGS) $(CXXFLAGS) $(DEFS) \
              -I.. -I$(srcdir) $< \
	    | sed '\''s/\($*\)\.o[ :]*/\1.o \1.lo $@ : /g'\'' > $@; \
	      [ -s $@ ] || rm -f $@'

%.o: %.cc
	$(buildcmd) $<
	@ touch $(buildtoken)

% : %.o
% : %.cc


LEXERPREFIX = mcc

SOURCES = mccparser.cc Version.cc

CSOURCES = lex.$(LEXERPREFIX).c y.tab.c

HEADERS = $(SOURCES:.cc=.h)

OBJECTS = $(SOURCES:.cc=.o) $(CSOURCES:.c=.o)

LIBRARY = lib$(PACKAGE)

DISTFILES = Makefile.in $(SOURCES) $(HEADERS) mccp.yy mccp.y


ifeq "$(SHARED)" "yes"
        BUILDSHAREDLIBRARY = $(LIBRARY).$(LIBEXT).$(VERSION)
        INSTALLSHAREDLIBRARY = install-$(LIBRARY).$(LIBEXT)
else
	BUILDSHAREDLIBRARY =
	INSTALLSHAREDLIBRARY =
endif

ifeq "$(STATIC)" "yes"
        BUILDSTATICLIBRARY = $(LIBRARY).a
        INSTALLSTATICLIBRARY = install-$(LIBRARY).a
else
	BUILDSTATICLIBRARY =
	INSTALLSTATICLIBRARY =
endif

all: $(BUILDSTATICLIBRARY) $(BUILDSHAREDLIBRARY) TAGS

$(LIBRARY).$(LIBEXT).$(VERSION): $(OBJECTS)
	if test -r $(buildtoken); then $(buildcmd) $(srcdir)/Version.cc; fi
	$(CXX) $(LINKOPTIONS) -o $@ $(LDNAMEPARAM)$@ $(LDFLAGS) $(OBJECTS)
	@ ln -sf $@ $(LIBRARY).so
	@ $(RM) $(buildtoken)

$(LIBRARY).a: $(OBJECTS)
	@ if test -r $(buildtoken); then $(buildcmd) $(srcdir)/Version.cc; fi
	$(ARXX) $(AROPTIONS) $@ $(OBJECTS)
	@ $(RM) $(buildtoken)

TAGS: $(SOURCES) $(HEADERS)
	@ etags --c++ $^

lex.$(LEXERPREFIX).c: mccp.yy
	$(LEX) -P$(LEXERPREFIX) $<

y.tab.c y.tab.h: mccp.y
	$(YACC) -p $(LEXERPREFIX) -d -t --report=all $^

lex.$(LEXERPREFIX).o: lex.$(LEXERPREFIX).c y.tab.h
	$(CXX) $(CXXFLAGS) -I. -I$(srcdir) $(DEFS) -c $<

lex.$(LEXERPREFIX).lo: lex.$(LEXERPREFIX).c y.tab.h
	$(CXX) $(CXXFLAGS) -I. -I$(srcdir) $(DEFS) -c $< -o $@

y.tab.o: y.tab.c y.tab.h
	$(CXX) $(CXXFLAGS) -I. -I$(srcdir) $(DEFS) -c $<


doc:


install: $(INSTALLSTATICLIBRARY) $(INSTALLSHAREDLIBRARY)
	@ echo Installing headers in $(includedir)/$(PACKAGE)-$(VERSION)
	@ $(srcdir)/../mkinstalldirs $(includedir)/$(PACKAGE)-$(VERSION)
	@ for file in $(HEADERS); do \
           $(INSTALL_DATA) $(srcdir)/$$file $(includedir)/$(PACKAGE)-$(VERSION)/$$file; \
          done
	@ $(RM) -f $(includedir)/$(PACKAGE)
	@ ln -s $(PACKAGE)-$(VERSION) $(includedir)/$(PACKAGE)

install-$(LIBRARY).$(LIBEXT): $(LIBRARY).$(LIBEXT).$(VERSION)
	@ echo Installing $(LIBRARY).$(LIBEXT) in $(libdir)
	@ $(srcdir)/../mkinstalldirs $(libdir)
	@ $(INSTALL_DATA) $^ $(libdir)/$^
	@ $(RM) -f $(libdir)/$(LIBRARY).$(LIBEXT)
	@ ln -s $^ $(libdir)/$(LIBRARY).$(LIBEXT)

install-$(LIBRARY).a: $(LIBRARY).a
	@ echo Installing $(LIBRARY).a in $(libdir)
	@ $(srcdir)/../mkinstalldirs $(libdir)
	@ $(INSTALL_DATA) $(LIBRARY).a $(libdir)/$(LIBRARY)-$(VERSION).a
	@ $(RM) -f $(libdir)/$(LIBRARY).a
	@ ln -s $(LIBRARY)-$(VERSION).a $(libdir)/$(LIBRARY).a

install-doc:
	@ echo "Nothing to do"

uninstall:
	@ $(RM) $(libdir)/$(LIBRARY).a
	@ $(RM) $(libdir)/$(LIBRARY)-$(VERSION).a
	@ $(RM) $(libdir)/$(LIBRARY).so
	@ $(RM) $(libdir)/$(LIBRARY).$(LIBEXT).$(VERSION)
	@ for file in $(HEADERS); do \
           $(RM) $(includedir)/$(PACKAGE)-$(VERSION)/$$file; \
          done;
	@- rmdir $(includedir)/$(PACKAGE)-$(VERSION)
	@ $(RM) $(includedir)/$(PACKAGE)


mostlyclean:
	@ $(RM) *~
	@ $(RM) core

clean: mostlyclean
	@ echo "Cleaning project"
	@ $(RM) $(LIBRARY).so $(LIBRARY).$(LIBEXT).$(VERSION) $(LIBRARY).a
	@ $(RM) $(OBJECTS) TAGS
	@ $(RM) lex.$(LEXERPREFIX).c y.tab.c y.tab.h
	@ $(RM) *.d

distclean: clean
	@ $(RM) Makefile

topclean: distclean
	@ echo "The project is getting _top_ clean\!"

dist:
	@ echo "Copying distribution files"
	@ for file in $(DISTFILES); do \
	   ln $(srcdir)/$$file ../$(PACKAGE_TARNAME)-$(VERSION)/lib 2> /dev/null \
	    || cp -p $(srcdir)/$$file ../$(PACKAGE_TARNAME)-$(VERSION)/lib; \
	  done

Makefile: $(srcdir)/Makefile.in ../config.status
	@ cd .. && CONFIG_FILES=lib/$@ CONFIG_HEADERS= ./config.status

# Tell versions [3.59,3.63) of GNU make not to export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:

-include $(SOURCES:.cc=.d)
